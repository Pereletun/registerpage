const express = require("express");
const bodyParser = require("body-parser");
const axios = require("axios");
const path = require("path");

const app = express();
const PORT = 3000;

// –£–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–ø–∫—É —Å–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏
app.use(express.static(path.join(__dirname, "public")));

// –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ Chat ID
const TOKEN = "7756662510:AAGVp31vi-GvcvSeTP_O2UsNN6EjRMGdS9w";
const CHAT_ID = "1648456491";

// URL –¥–ª—è API Telegram
const TELEGRAM_URL = `https://api.telegram.org/bot${TOKEN}/sendMessage`;

// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ IP
function getClientIP(req) {
    return req.headers['x-forwarded-for'] || req.connection.remoteAddress || req.socket.remoteAddress || req.connection.socket.remoteAddress;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞
app.post("/send-message", async (req, res) => {
    const { name, phone } = req.body;

    // –ü–æ–ª—É—á–∞–µ–º IP –∫–ª–∏–µ–Ω—Ç–∞
    const clientIP = getClientIP(req);

    console.log(`Received body:`, req.body);
    console.log(`Name: ${name}, Phone: ${phone}, IP: ${clientIP}`);

    if (!name || !phone) {
        return res.status(400).send("–ò–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã");
    }

    const message = `üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\nüë§ –ò–º—è: ${name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\nüåê IP: ${clientIP}`;

    try {
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
        const response = await axios.post(TELEGRAM_URL, {
            chat_id: CHAT_ID,
            text: message,
        });

        console.log("Response from Telegram:", response.data);
        res.status(200).send("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!");
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", error.response ? error.response.data : error.message);
        res.status(500).send("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.");
    }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
